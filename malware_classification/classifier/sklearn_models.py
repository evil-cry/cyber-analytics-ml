from sklearn.svm import LinearSVC, SVC
from sklearn.metrics import accuracy_score
from sklearn.model_selection import train_test_split
from sklearn.datasets import make_classification

# Generate a synthetic dataset for binary classification.
X, y = make_classification(n_samples=1000, n_features=20, n_informative=15, n_redundant=5, n_classes=2, random_state=42)

# Split the dataset into training and testing sets (80% train, 20% test).
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Train a linear SVM 
linear_svm = LinearSVC(max_iter=10000, random_state=42)
linear_svm.fit(X_train, y_train)
linear_pred = linear_svm.predict(X_test)
print("LinearSVC accuracy:", accuracy_score(y_test, linear_pred))

# Train an SVM with an RBF kernel 
rbf_svm = SVC(kernel='rbf', random_state=42)
rbf_svm.fit(X_train, y_train)
rbf_pred = rbf_svm.predict(X_test)
print("SVC with RBF kernel accuracy:", accuracy_score(y_test, rbf_pred))
