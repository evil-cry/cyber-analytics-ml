import logging
import zipfile

logging.basicConfig(
    level=logging.DEBUG,
    format = '%(asctime)s - %(message)s'
)

logger = logging.getLogger(__name__)
logging.disable(50)

class _Algorithm():
    '''
    Generic methods and constructors for ML algorithms
    '''

    def __init__(self, data: list, feature_data: list) -> None:
        self.data = data[0]
        self.feature_data = feature_data[0]
        self.features = set()
        self.get_features()

    def get_features(self):
        with zipfile.ZipFile(self.feature_data, 'r') as f:
            for feature_file in f.namelist():
                with f.open(feature_file) as ff:
                    content = ff.read()
                    self.features.add(content)

        print(len(self.features))

    def process(self) -> None:
        pass

class SVM(_Algorithm):
    '''
    Support Vector Machine Algorithm
    '''
    
    def __init__(self, *args, **kwargs) -> None:
        super(SVM, self).__init__(*args, **kwargs)
        self.name = "Support Vector Machine"